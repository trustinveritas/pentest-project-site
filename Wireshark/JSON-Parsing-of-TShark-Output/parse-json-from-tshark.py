"""
Author      : AnyGuy
Date        : 2023-10-19

Title       : parse-json-from-tshark.py

Description : This script is designed to analyze a JSON file exported from tshark,
              specifically focusing on identifying successful TCP handshakes. 
              A successful handshake is identified by a sequence of SYN, SYN-ACK, and ACK packets.
              The script outputs the number of successful handshakes and the packet numbers
              corresponding to each handshake sequence.
    
    - Load the JSON file containing packet data.
    - Parse through packets to identify SYN packets.
    - Check subsequent packets for SYN-ACK and ACK flags.
    - List successful handshake sequences.

"""

# Import Libraries
import json

def find_successful_handshakes(filename):
    """Function to identify successful TCP handshakes in the provided JSON file."""
    with open(filename, 'r') as f:
        packets = json.load(f)

    successful_handshakes = []

    # Loop through packets to find SYN packets
    for i in range(len(packets) - 2):
        # Check for SYN flag
        if 'tcp' in packets[i]['_source']['layers'] and packets[i]['_source']['layers']['tcp']['tcp.flags.syn'] == '1' and packets[i]['_source']['layers']['tcp']['tcp.flags.ack'] == '0':
            # Check for SYN-ACK flag in the next packet
            if 'tcp' in packets[i+1]['_source']['layers'] and packets[i+1]['_source']['layers']['tcp']['tcp.flags.syn'] == '1' and packets[i+1]['_source']['layers']['tcp']['tcp.flags.ack'] == '1':
                # Check for ACK flag in the subsequent packet
                if 'tcp' in packets[i+2]['_source']['layers'] and packets[i+2]['_source']['layers']['tcp']['tcp.flags.ack'] == '1' and packets[i+2]['_source']['layers']['tcp']['tcp.flags.syn'] == '0':
                    successful_handshakes.append((packets[i]['_source']['number'], packets[i+1]['_source']['number'], packets[i+2]['_source']['number']))

    return successful_handshakes

successful_handshakes = find_successful_handshakes('packets.json')
print(f"Successful TCP handshakes: {len(successful_handshakes)}")
for handshake in successful_handshakes:
    print(f"Handshake packets: {handshake}")