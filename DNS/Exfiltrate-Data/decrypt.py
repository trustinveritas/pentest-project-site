"""
Author      : AnyGuy
Date        : 2023-09-02

Title       : decrypt.py

Description : Decrypt data that was encrypted using AES encryption with a passphrase.
    
    - No external libraries are used
    - This is only for educational purposes !

"""

from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.backends import default_backend
import base64

def decrypt_data(encrypted_data, passphrase):
    """
    Decrypt the given data using AES encryption with the provided passphrase.
    """
    decoded_data = base64.b64decode(encrypted_data)
    salt = decoded_data[:16]
    iv = decoded_data[16:32]
    encrypted_data = decoded_data[32:]
    
    kdf = PBKDF2HMAC(
        algorithm=hashes.SHA256(),
        length=32,
        salt=salt,
        iterations=100000,
        backend=default_backend()
    )
    key = kdf.derive(passphrase.encode())
    cipher = Cipher(algorithms.AES(key), modes.CFB(iv), backend=default_backend())
    decryptor = cipher.decryptor()
    decrypted_data = decryptor.update(encrypted_data) + decryptor.finalize()
    return decrypted_data.decode('utf-8')

if __name__ == '__main__':
    encrypted_text = input("Please enter the encrypted text: ")
    passphrase = input("Please enter the passphrase used for encryption: ")
    decrypted_text = decrypt_data(encrypted_text, passphrase)
    print("\nDecrypted Text:\n", decrypted_text)
