"""
Author      : AnyGuy
Date        : 2023-08-18

Title       : sleuth-kit-details-parser.py

Description : Here comes text
    
    - xy
    - xy
    - xy

"""

# Import Libraries
import argparse
import datetime
import csv

def parse_sleuthkit_output(data):
    parsed_data = []
    lines = data.strip().split("\n")
    
    for line in lines:
        parts = line.split('|')
        entry_type = parts[0]
        file_path = parts[1]
        inode = parts[2]
        permissions = parts[3]
        uid = parts[4]
        gid = parts[5]
        size = parts[6]
        timestamps = [datetime.datetime.fromtimestamp(int(ts)).strftime('%Y-%m-%d %H:%M:%S') for ts in parts[7:]]
        
        parsed_data.append({
            'entry_type': entry_type,
            'file_path': file_path,
            'inode': inode,
            'permissions': permissions,
            'uid': uid,
            'gid': gid,
            'size': size,
            'creation_time': timestamps[0],
            'last_access': timestamps[1],
            'last_modification': timestamps[2],
            'entry_change': timestamps[3]
        })
    
    return parsed_data

def write_to_csv(parsed_data, filename):
    with open(filename, 'w', newline='') as csvfile:
        fieldnames = ['entry_type', 'file_path', 'inode', 'permissions', 'uid', 'gid', 'size', 'creation_time', 'last_access', 'last_modification', 'entry_change']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for entry in parsed_data:
            writer.writerow(entry)

def main():
    parser = argparse.ArgumentParser(description="Parse Sleuthkit output and convert it to a CSV file format.")
    parser.add_argument('-i', '--input', type=str, required=True, help="Path to the Sleuthkit output file")
    parser.add_argument('-o', '--output', type=str, required=True, help="Path to save the parsed CSV file")
    args = parser.parse_args()

    with open(args.input, 'r') as f:
        data = f.read()

    parsed_data = parse_sleuthkit_output(data)
    write_to_csv(parsed_data, args.output)
    print(f"Output written to {args.output}")

if __name__ == "__main__":
    main()
